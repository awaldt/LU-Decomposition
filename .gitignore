*.class

# Package Files #
*.jar
*.war
*.ear

// Alexander Waldt
// Math401
// Project #1

import java.lang.Math;


public class Decomposition   {
	int m, n;
	
	public static void main(String args[]) {
		
	}

	public double[][] CalculateLU(double[][] A) {
		m = A.length;
		n = A[m].length;
		double[][] L = new double[m][n];
		double[][] LU = new double[m][n];

		for (int j = 0; j < n; j++) {
			for (int i = 1; i < m; i++) {
				for (int k = 0; k < n; k++) {
					A[i][k] -= (A[i][j] * A[j][k])/A[j][j];
					if ( i > k) {
						L[i][k] = A[i][j]/A[j][j]; 
					}
				}
			}

		}

		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				LU[i][j] = A[i][j] + L[i][j];
			}
		}
		return LU;
	}

	public double[][] CalculateU(double[][] A) {
		m = A.length;
		n = A[m].length;	
		double[][] LU = A.CalculateLU();
		double[][] U = new double[m][n];
		
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i <= j) {
					U[i][j] = LU[i][j];
				} else {
					U[i][j] = 0.0;

				}
			}
		}
		return U;
	}
	
		public double[][] CalculateL(double[][] A) {
			m = A.length;
			n = A[m].length;
			
			double[][] LU = A.CalculateLU();
			double[][] L = new double[m][n];
			
			for (int i = 0; i < m; i++) {
			      for (int j = 0; j < n; j++) {
			        if (i > j) {
			          L[i][j] = LU[i][j];
			        } else if (i == j) {
			          L[i][j] = 1.0;
			        } else {
			          L[i][j] = 0.0;
			        }
			      }
			    }
			return L;
		}



	}


